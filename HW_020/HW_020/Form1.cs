// Обычно для диагностики вводимых числовых данных мы пользовались функцией TryParse.
// Эта функция возвращает True, если на ее вход подается числовые данные, и False в противном случае.
// Покажем, как можно совершенно по-другому решить задачу контроля вводимых пользователем данных.
// Можно вообще не давать возможность пользователю вводить нечисловые данные.
// Обращаем внимание, как происходит ввод числовых данных в программе Калькулятор системы Windows
// — здесь программа просто не даст возможности пользователю ввести нечисловой символ.
// Продемонстрируем и мы такое решение на следующем примере.

// Программа анализирует каждый символ, вводимый пользователем в текстовое
// поле формы. Если символ не является цифрой или Backspace, то текстовое
// поле получает запрет на ввод такого символа.
// Таким образом, программа не дает возможности пользователю ввода нечисловых данных

namespace HW_020
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            this.Text = "Введите число"; textBox1.Clear();
        }

        private void textBox1_KeyPress(object sender, KeyPressEventArgs e)
        {
            // Разрешаем ввод только десятичных цифр и Backspace:
            if (Char.IsDigit(e.KeyChar) == true) return;
            if (e.KeyChar == Convert.ToChar(Keys.Back)) return;

            // Запрет на ввод других вводимых символов:
            e.Handled = true;
        }
    }
}


// Пустой обработчик события textBox1_KeyPress мы получаем через вкладки конструктора формы в панели свойств Properties,
// щелкнув на символе молнии (Events), выбираем в списке всех возможных событий событие KeyPress для текстового поля.
// Управляющая среда Visual Studio 2022 генерирует при этом пустую процедуру обработки данного события.

// В этой процедуре можно легко определить, какую клавишу нажал пользователь, из аргумента события e.
// Символ, соответствующий нажатой клавише, содержится в свойстве аргумента e.KeyChar.
// На вход функции IsDigital подаем это свойство (т. е. исследуемый символ), а на выходе получаем заключение, является ли исследуемый символ 
// цифрой (true или false). Аргумент события e имеет замечательное свойство Handled которое либо запрещает получение данного события текстовым полем (true), либо разрешает (false).
// Всякий раз при очередной работе процедуры textBox1_KeyPress изначально свойство e.Handled = false, т. е. получение данного события текстовым полем 
// разрешено. Последней строкой в процедуре запрещаем ввод символов в текстовое поле,
// но если пользователь вводит цифру или нажал клавишу <Backspace>, то этот запрет мы 
// обходим с помощью оператора return. Таким образом, мы добиваемся игнорирования текстовым полем нецифровых символов