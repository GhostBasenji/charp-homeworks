// На экранной форме имеем две кнопки. Щелчок на первой кнопке вызывает
// появление окна с сообщением о произошедшем событии нажатия первой
// кнопки. Щелкая на второй кнопке, мы имитируем нажатие первой кнопки
// путем программного вызова события нажатия первой кнопки

namespace HW_022
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            MessageBox.Show("Произошло событие \"щелчок на первой кнопке\"");
        }

        private void button2_Click(object sender, EventArgs e)
        {
            // Здесь программно вызываем событие "щелчок на первой кнопке", хотя щелкнули по на второй кнопке:
            button1.PerformClick();

            // То же самое можно сделать так:
            // button1_Click(null, null);
            // или так:
            // button1_Click(button1, EventArgs.Empty);
        }
    }
}


// Щелкая указателем мыши на кнопке, мы вызываем это событие и можем обрабатывать
// его в соответствующей процедуре. Здесь мы хотим показать, как можно программно 
// вызвать это событие без щелчка на самой кнопке.

// При обработке события "щелчок на второй кнопке" мы вызвали событие "щелчок на первой кнопке".
// В комментарии указали варианты вызова этого события другими способами.
// Это открывает возможность использования приведенной методики и для других элементов управления,
// не имеющих прямого метода вызова соответствующего события наподобие PerformClick. 